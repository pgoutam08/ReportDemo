import java.io.File;
import java.io.IOException;
import java.lang.reflect.Method;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;

import library.Utility;

public class DummyReport {
	
	ExtentReports reports;
	ExtentTest testInfo;
	ExtentHtmlReporter htmlReporter;
	WebDriver driver;
	
	@BeforeTest
	public void setup()
	{
		htmlReporter = new ExtentHtmlReporter(new File(System.getProperty("user.dir")+"/AutomationReport.html"));
		htmlReporter.loadXMLConfig(new File(System.getProperty("user.dir")+"/extent-config.xml"));
		
		reports = new ExtentReports();
		reports.setSystemInfo("Environment", "QA");
		reports.attachReporter(htmlReporter);
		
		
	}
	
	@Test
	public void methodOne()
	{
		Assert.assertTrue(true);
		
		System.setProperty("webdriver.gecko.driver", "D:\\Learning\\geckodriver.exe");
		driver = new FirefoxDriver();
		
		//logger.log(LogStatus.INFO, "Browser Started");
		
		driver.manage().window().maximize();
		
		
		driver.get("http://learn-automation.com");
		
		
		
		//testInfo.log(Status.INFO, "This is test one");
		String title = driver.getTitle();
		
		Assert.assertTrue(title.contains("Selenium"));
		
		//Utility.captureScreenshot(driver,"SeleniumTitle");
		
		testInfo.log(Status.PASS, "Title Verified");
		
		
	}
	
	@Test
	public void methodTwo()
	{
		Assert.assertTrue(false);
		testInfo.log(Status.INFO, "This is test Two");
		
	}
	
	@BeforeMethod
	public void register(Method method)
	{
		String testName = method.getName();
		testInfo = reports.createTest(testName);
		
	}
	
	@AfterMethod
	public void captureStatus(ITestResult result) throws Exception
	{
		if(result.getStatus()== ITestResult.SUCCESS)
		{
			testInfo.log(Status.PASS, "The test method named as "+result.getName()+" is passed.");
			String screenshotPath = Utility.captureScreenshot(driver, result.getName());
			System.out.println(screenshotPath);
			testInfo.addScreencastFromPath(screenshotPath);
			//testInfo.log(Status.FAIL, "Title Verification Failed", image);
			
			
		}
		else if(result.getStatus()==ITestResult.FAILURE)
		{
			testInfo.log(Status.FAIL, "The test method named as "+result.getName()+" is failed.");
			//String screenshotPath = Utility.captureScreenshot(driver, result.getName());
			//System.out.println(screenshotPath);
			//String image = logger.addScreenCapture(screenshotPath);
			//logger.log(LogStatus.FAIL, "Title Verification Failed", image);
		//}
		//report.endTest(logger);
		//report.flush();
		
		//driver.get("D:\\Learning\\ReportDemo\\src\\Report\\VerifyPageTitle.html");
			
			
		}
		else if(result.getStatus()==ITestResult.SKIP)
		{
			testInfo.log(Status.SKIP, "The test method named as "+result.getName()+" is skipped.");
		}
	}
	
	@AfterTest
	public void cleanUp()
	{
		reports.flush();
		
	}

}

















